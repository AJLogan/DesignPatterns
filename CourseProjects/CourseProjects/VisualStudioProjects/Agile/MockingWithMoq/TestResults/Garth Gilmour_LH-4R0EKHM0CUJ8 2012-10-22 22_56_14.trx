<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="9f85fbdd-01bf-42f2-a4b0-47aa883572d9" name="Garth Gilmour@LH-4R0EKHM0CUJ8 2012-10-22 22:56:14" runUser="LH-4R0EKHM0CUJ8\Garth Gilmour" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="f85a2095-b8b5-4bcc-b983-62a011394f52">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment userDeploymentRoot="E:\Deliveries\ScrumDeveloperKainosOct2012\CourseProjects\VisualStudioProjects\MockingWithMoq\TestResults" useDefaultDeploymentRoot="false" enabled="false" runDeploymentRoot="Garth Gilmour_LH-4R0EKHM0CUJ8 2012-10-22 22_56_14">
      <DeploymentItem filename="E:\Deliveries\ScrumDeveloperKainosOct2012\CourseProjects\VisualStudioProjects\MockingWithMoq\BasicMocking\bin\Debug\Moq.dll" />
      <DeploymentItem filename="E:\software\Moq.4.0.10827\NET40\Moq.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-10-22T22:56:14.4668530+01:00" queuing="2012-10-22T22:56:14.4717355+01:00" start="2012-10-22T22:56:14.6074690+01:00" finish="2012-10-22T22:56:15.9950755+01:00" />
  <ResultSummary outcome="Failed">
    <Counters total="5" executed="5" passed="4" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="OrderPossibleWhenItemsInStock" storage="e:\deliveries\scrumdeveloperkainosoct2012\courseprojects\visualstudioprojects\mockingwithmoq\advancedmocking\bin\debug\advancedmocking.dll" id="b8d37a9a-f38b-7fc1-9832-a69a248ba8eb">
      <Execution id="8099a065-e6b4-4c04-b74b-9cefa3337e6f" />
      <TestMethod codeBase="E:/Deliveries/ScrumDeveloperKainosOct2012/CourseProjects/VisualStudioProjects/MockingWithMoq/AdvancedMocking/bin/Debug/AdvancedMocking.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="AdvancedMocking.ShopTest, AdvancedMocking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="OrderPossibleWhenItemsInStock" />
    </UnitTest>
    <UnitTest name="makePurchaseWorksForInvalidQuantity" storage="e:\deliveries\scrumdeveloperkainosoct2012\courseprojects\visualstudioprojects\mockingwithmoq\basicmocking\bin\debug\mockobjectswithmoq.dll" id="466ff7ff-bd1a-d391-8d2d-4744ec2b2219">
      <Execution id="7ebe3f2c-e77a-4c76-8c82-6be6b4944a63" />
      <TestMethod codeBase="E:/Deliveries/ScrumDeveloperKainosOct2012/CourseProjects/VisualStudioProjects/MockingWithMoq/BasicMocking/bin/Debug/MockObjectsWithMoq.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="MockObjectsWithMoq.ShopTest, MockObjectsWithMoq, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="makePurchaseWorksForInvalidQuantity" />
    </UnitTest>
    <UnitTest name="MakePurchaseWorksForValidQuantity" storage="e:\deliveries\scrumdeveloperkainosoct2012\courseprojects\visualstudioprojects\mockingwithmoq\advancedmocking\bin\debug\advancedmocking.dll" id="32e70c2c-aebd-7322-cb00-3812d579d1d7">
      <Execution id="6a6d611d-1eaa-4754-bf93-a6dd0b8dd619" />
      <TestMethod codeBase="E:/Deliveries/ScrumDeveloperKainosOct2012/CourseProjects/VisualStudioProjects/MockingWithMoq/AdvancedMocking/bin/Debug/AdvancedMocking.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="AdvancedMocking.ShopTest, AdvancedMocking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="MakePurchaseWorksForValidQuantity" />
    </UnitTest>
    <UnitTest name="makePurchaseWorksForValidQuantity" storage="e:\deliveries\scrumdeveloperkainosoct2012\courseprojects\visualstudioprojects\mockingwithmoq\basicmocking\bin\debug\mockobjectswithmoq.dll" id="618c02d5-3421-cf6c-0fe6-1de2d14aab1a">
      <Execution id="2527c8ee-b25e-46ff-96e2-1c7d4cfd769b" />
      <TestMethod codeBase="E:/Deliveries/ScrumDeveloperKainosOct2012/CourseProjects/VisualStudioProjects/MockingWithMoq/BasicMocking/bin/Debug/MockObjectsWithMoq.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="MockObjectsWithMoq.ShopTest, MockObjectsWithMoq, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="makePurchaseWorksForValidQuantity" />
    </UnitTest>
    <UnitTest name="MakePurchaseWorksForInvalidQuantity" storage="e:\deliveries\scrumdeveloperkainosoct2012\courseprojects\visualstudioprojects\mockingwithmoq\advancedmocking\bin\debug\advancedmocking.dll" id="2adf743d-c800-204b-2822-5b5017c1ea2b">
      <Execution id="7b95a2e8-58a8-4b20-8729-f3a859bafd5b" />
      <TestMethod codeBase="E:/Deliveries/ScrumDeveloperKainosOct2012/CourseProjects/VisualStudioProjects/MockingWithMoq/AdvancedMocking/bin/Debug/AdvancedMocking.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="AdvancedMocking.ShopTest, AdvancedMocking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="MakePurchaseWorksForInvalidQuantity" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="2adf743d-c800-204b-2822-5b5017c1ea2b" executionId="7b95a2e8-58a8-4b20-8729-f3a859bafd5b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="32e70c2c-aebd-7322-cb00-3812d579d1d7" executionId="6a6d611d-1eaa-4754-bf93-a6dd0b8dd619" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="466ff7ff-bd1a-d391-8d2d-4744ec2b2219" executionId="7ebe3f2c-e77a-4c76-8c82-6be6b4944a63" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="618c02d5-3421-cf6c-0fe6-1de2d14aab1a" executionId="2527c8ee-b25e-46ff-96e2-1c7d4cfd769b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b8d37a9a-f38b-7fc1-9832-a69a248ba8eb" executionId="8099a065-e6b4-4c04-b74b-9cefa3337e6f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="7b95a2e8-58a8-4b20-8729-f3a859bafd5b" testId="2adf743d-c800-204b-2822-5b5017c1ea2b" testName="MakePurchaseWorksForInvalidQuantity" computerName="LH-4R0EKHM0CUJ8" duration="00:00:00.2145814" startTime="2012-10-22T22:56:14.7519910+01:00" endTime="2012-10-22T22:56:15.1875100+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b95a2e8-58a8-4b20-8729-f3a859bafd5b">
    </UnitTestResult>
    <UnitTestResult executionId="6a6d611d-1eaa-4754-bf93-a6dd0b8dd619" testId="32e70c2c-aebd-7322-cb00-3812d579d1d7" testName="MakePurchaseWorksForValidQuantity" computerName="LH-4R0EKHM0CUJ8" duration="00:00:00.0172999" startTime="2012-10-22T22:56:15.1923925+01:00" endTime="2012-10-22T22:56:15.2148520+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6a6d611d-1eaa-4754-bf93-a6dd0b8dd619">
    </UnitTestResult>
    <UnitTestResult executionId="7ebe3f2c-e77a-4c76-8c82-6be6b4944a63" testId="466ff7ff-bd1a-d391-8d2d-4744ec2b2219" testName="makePurchaseWorksForInvalidQuantity" computerName="LH-4R0EKHM0CUJ8" duration="00:00:00.2397924" startTime="2012-10-22T22:56:15.2168050+01:00" endTime="2012-10-22T22:56:15.6484180+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7ebe3f2c-e77a-4c76-8c82-6be6b4944a63">
    </UnitTestResult>
    <UnitTestResult executionId="2527c8ee-b25e-46ff-96e2-1c7d4cfd769b" testId="618c02d5-3421-cf6c-0fe6-1de2d14aab1a" testName="makePurchaseWorksForValidQuantity" computerName="LH-4R0EKHM0CUJ8" duration="00:00:00.0170309" startTime="2012-10-22T22:56:15.6533005+01:00" endTime="2012-10-22T22:56:15.6767365+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2527c8ee-b25e-46ff-96e2-1c7d4cfd769b">
    </UnitTestResult>
    <UnitTestResult executionId="8099a065-e6b4-4c04-b74b-9cefa3337e6f" testId="b8d37a9a-f38b-7fc1-9832-a69a248ba8eb" testName="OrderPossibleWhenItemsInStock" computerName="LH-4R0EKHM0CUJ8" duration="00:00:00.1262970" startTime="2012-10-22T22:56:15.6806425+01:00" endTime="2012-10-22T22:56:15.8212585+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8099a065-e6b4-4c04-b74b-9cefa3337e6f">
      <Output>
        <ErrorInfo>
          <Message>Test method AdvancedMocking.ShopTest.OrderPossibleWhenItemsInStock threw exception: 
Moq.MockException: 
Expected invocation on the mock exactly 4 times, but was 3 times: m =&gt; m.check(It.IsAny&lt;String&gt;())

Configured setups:
m =&gt; m.check(It.IsAny&lt;String&gt;()), Times.Exactly(3)

Performed invocations:
IStockCheckEngine.check("AB12")
IStockCheckEngine.check("CD34")
IStockCheckEngine.check("EF56")</Message>
          <StackTrace>    at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)
   at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)
   at Moq.Mock.Verify[T,TResult](Mock mock, Expression`1 expression, Times times, String failMessage)
   at Moq.Mock`1.Verify[TResult](Expression`1 expression, Times times)
   at AdvancedMocking.ShopTest.OrderPossibleWhenItemsInStock() in E:\Deliveries\ScrumDeveloperKainosOct2012\CourseProjects\VisualStudioProjects\MockingWithMoq\AdvancedMocking\ShopTest.cs:line 51
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>